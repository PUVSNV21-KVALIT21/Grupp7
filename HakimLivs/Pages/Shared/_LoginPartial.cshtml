@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
	var HttpUser = UserManager.GetUserAsync(User).Result;
}

<ul class="navbar-nav">
	@if (SignInManager.IsSignedIn(User))
	{

		<li class="nav-item">
			<a  class="nav-link text-dark" asp-page="/MyPages/Index" asp-route-id="@HttpUser.Id" title="Manage">Mina sidor</a>
		</li>
		<li class="nav-item">
			<a  class="nav-link text-dark" asp-page="/Admin/Index" title="Manage">Admin</a>
		</li>
		<li class="nav-item">
			<form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post" >
				<button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
			</form>
		</li>
	}
	else
	{
		<li class="nav-item">
			<a class="nav-link text-dark" asp-page="/Register/Index">Register</a>
		</li>
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
		</li>
	}
</ul>
